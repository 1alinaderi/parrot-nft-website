import { parrotInformation } from "@/constant/parrot";
import axios from "axios";
import Head from "next/head";
import React from "react";
import { useEffect } from "react";
import { useState } from "react";
import InfiniteScroll from "react-infinite-scroll-component";

const Gallery = ({ dataParrot }) => {
  const [filterinput, setFilterinput] = useState();
  const [dataScroll, setDataScroll] = useState([]);
  const [page, setPage] = useState(1);

  const callMetadata = async (id) => {
    const _res = await axios.get(
      `https://ipfs.io/ipfs/QmdQ9DuVzwNBH44jP6BCbrKFoPEjmXogDxndrcevCBdWop/${id}.json`
    );
    return _res.data;
  };
  const give100meta = async (min, max) => {
    let data = [];
    for (let i = min; i < max; i++) {
      await callMetadata(i).then((e) => {
        data.push(e);
      });
    }
    return data;
  };

  const renderNext = async () => {
    const min = page * 10 - 10;
    const max = min + 11;
    const newData = await give100meta(min + 1, max);
    await setDataScroll(dataScroll.concat(newData));
  };

  useEffect(() => {
    setDataScroll(dataParrot);
  }, []);

  useEffect(() => {
    if (page != 1) {
      console.log(page);
      renderNext();
    }
  }, [page]);

  return (
    <div style={{ minHeight: "100vh" }} className="bg-black w-100  p-0 m-0 ">
      <Head>
        <title>World Parrots || Gallery</title>
        <meta name="description" content="Generated by World Parrots" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/Logo 1!.png" />
        <link rel="apple-touch-icon" sizes="180x180" href="/Logo 1!.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/Logo 1!.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/Logo 1!.png" />
        <link rel="shortcut icon" type="image/x-icon" href="/Logo 1!.png" />
      </Head>
      {}
      <div className="w-100 p-0 px-4 px-  container-lg">
        <div className="w-100 p-0 m-0">
          <img
            style={{ height: "200px", objectFit: "cover" }}
            src="/banner1.JPEG"
            className="w-100"
          />
        </div>
        <div className="py-4 w-100 p-0 m-0 row">
          <div className="col-md-3 p-0 m-0">
            <div
              style={{ boxShadow: "0 2px 12px 0 hsla(0,0%,100%,.25)" }}
              className="w-100 p-0 m-0 p-3 rounded bg-dark border border-light"
            >
              <div
                style={{ color: "gold", fontFamily: "cursive" }}
                className="w-100 fs-5 p-0 m-0"
              >
                Filters Ranking
              </div>
              <div className="w-100 p-0 m-0 py-2">
                <input
                  type="text"
                  className="mt-3 p-2 bg-white rounded  w-100 text-dark form-control "
                  placeholder="Search by ID"
                  onChange={(e) => setFilterinput(e.target.value)}
                />
              </div>
            </div>
          </div>
          <div className="col-md-9 row p-0 m-0 px-lg-3 py-3 py-lg-0">
            <InfiniteScroll
              dataLength={dataScroll.length ? dataScroll.length : []}
              className="w-100 p-0 m-0 row"
              next={async () => {
                await setPage(page + 1);
              }}
              hasMore={true}
              loader={
                <h1 className="w-100 text-center text-white">Loading...</h1>
              }
              style={{ width: "100%" }}
              // endMessage={}
              endMessage={
                <h1 className="w-100 text-center text-white">END OF ITEM</h1>
              }
            >
              {filterinput
                ? dataScroll.map((e) => {
                    if (filterinput == e.name?.replace("Parrot #", "")) {
                      return (
                        <a
                          href={`/details/${e.name?.replace("Parrot #", "")}`}
                          className="col-sm-6 col-lg-4 col-xl-3 p-2"
                        >
                          <img src={e?.image} className="w-100 p-0 m-0" />
                          <div className="border border-dark rounded-bottom w-100 m-0 text-white">
                            <div className="w-100 p-0 m-0 p-3 border-bottom border-dark d-flex justify-content-between align-items-center">
                              <span>{e?.name}</span>
                              {e?.attributes?.map((type) => {
                                if (type.trait_type === "Rarity Rank") {
                                  return <small>Rank: {type.value}</small>;
                                }
                              })}
                            </div>
                            <div className="w-100 p-0 m-0 p-3  text-center">
                              Parrot Collection
                            </div>
                          </div>
                        </a>
                      );
                    }
                  })
                : dataScroll?.map((e) => {
                    return (
                      <a
                        href={`/details/${e.name?.replace("Parrot #", "")}`}
                        className="col-sm-6 col-lg-4 col-xl-3 p-2"
                      >
                        <img src={e?.image} className="w-100 p-0 m-0" />
                        <div className="border border-dark rounded-bottom w-100 m-0 text-white">
                          <div className="w-100 p-0 m-0  p-3 border-bottom border-dark d-flex justify-content-between align-items-center">
                            <span>{e?.name}</span>
                            {e?.attributes?.map((type) => {
                              if (type.trait_type === "Rarity Rank") {
                                return <small>Rank: {type.value}</small>;
                              }
                            })}
                          </div>
                          <div className="w-100 p-0 m-0 p-3  text-center">
                            Parrot Collection
                          </div>
                        </div>
                      </a>
                    );
                  })}
            </InfiniteScroll>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Gallery;
export async function getServerSideProps() {
  const callMetadata = async (id) => {
    const _res = await axios.get(
      `https://ipfs.io/ipfs/QmdQ9DuVzwNBH44jP6BCbrKFoPEjmXogDxndrcevCBdWop/${id}.json`
    );
    return _res.data;
  };

  const give100meta = async () => {
    let data = [];
    for (let i = 1; i < 11; i++) {
      await callMetadata(i).then((e) => {
        data.push(e);
      });
    }
    return data;
  };

  const dataParrot = await give100meta();

  return { props: { dataParrot } };
}
